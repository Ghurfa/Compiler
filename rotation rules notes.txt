a < c
	rotate left
	a < e
		rotate left
			recursive
	a = e (not possible)

a = c and left-assoc
	rotate left
	a < e
		not possible
	a = e and left-assoc
		rotate left
			recursive

a > b and a < c
	b > c	not possible
	b = c	not possible
	b < c	fine

a = b and a < c
	same

a + b + c
a = b = c and left-assoc
	fine

a < b and a < c
	b > c (a ^ b * c - d) -> a^((b*c))-d)
		right-left on a
	(a + b * c + d) -> (a + (b * c)) + d
	b = c and left-assoc
		left-right on a

(a ^ b * c - d -e)